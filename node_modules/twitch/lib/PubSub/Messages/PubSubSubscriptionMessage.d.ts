import { PubSubBasicMessageInfo, PubSubChatMessage } from './PubSubMessage';
import Twitch from '../../index';
import HelixUser from '../../API/Helix/User/HelixUser';
export interface PubSubSubscriptionDetail {
    context: 'sub' | 'resub';
}
export interface PubSubSubscriptionGiftDetail {
    context: 'subgift';
    recipient_id: string;
    recipient_user_name: string;
    recipient_display_name: string;
}
export declare type PubSubSubscriptionMessageData = PubSubBasicMessageInfo & {
    display_name: string;
    sub_plan: 'Prime' | '1000' | '2000' | '3000';
    sub_plan_name: string;
    months: number;
    sub_message: PubSubChatMessage;
} & (PubSubSubscriptionDetail | PubSubSubscriptionGiftDetail);
export default class PubSubSubscriptionMessage {
    private readonly _data;
    private readonly _twitchClient;
    constructor(_data: PubSubSubscriptionMessageData, twitchClient: Twitch);
    readonly userId: string;
    readonly userName: string;
    readonly userDisplayName: string;
    readonly isGift: boolean;
    readonly gifterId: string | null;
    readonly gifterName: string | null;
    readonly gifterDisplayName: string | null;
    getUser(): Promise<HelixUser>;
    getGifter(): Promise<HelixUser>;
}
