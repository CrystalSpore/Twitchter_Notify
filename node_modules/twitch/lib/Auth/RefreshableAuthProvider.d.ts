import AuthProvider from './AuthProvider';
import AccessToken from '../API/AccessToken';
export interface RefreshConfig {
    clientSecret: string;
    refreshToken: string;
    expiry?: Date | null;
    onRefresh?: (token: AccessToken) => void;
}
export default class RefreshableAuthProvider implements AuthProvider {
    private readonly _childProvider;
    private readonly _clientSecret;
    private _refreshToken;
    private _expiry?;
    private readonly _onRefresh?;
    constructor(_childProvider: AuthProvider, refreshConfig: RefreshConfig);
    getAccessToken(scopes?: string | string[]): Promise<string>;
    refresh(): Promise<AccessToken>;
    setAccessToken(token: string): void;
    readonly clientId: string;
    readonly currentScopes: string[];
}
