import Twitch from '../../../';
import { UserIdResolvable } from '../../../Toolkit/UserTools';
import UserFollow from '../../User/UserFollow';
import HelixFollow from './HelixFollow';
import HelixPagination from '../HelixPagination';
export declare type HelixBroadcasterType = 'partner' | 'affiliate' | '';
export declare type HelixUserType = 'staff' | 'admin' | 'global_mod' | '';
export interface HelixUserData {
    id: string;
    login: string;
    display_name: string;
    description: string;
    type: HelixUserType;
    broadcaster_type: HelixBroadcasterType;
    profile_image_url: string;
    offline_image_url: string;
    view_count: number;
}
export default class HelixUser {
    protected _data: HelixUserData;
    protected _client: Twitch;
    constructor(_data: HelixUserData, client: Twitch);
    readonly cacheKey: string;
    readonly id: string;
    readonly name: string;
    readonly displayName: string;
    readonly profilePictureUrl: string;
    getFollows(paginationParams: HelixPagination): Promise<HelixFollow[]>;
    getFollowTo(channel: UserIdResolvable): Promise<HelixFollow>;
    follows(channel: UserIdResolvable): Promise<boolean>;
    follow(): Promise<UserFollow>;
    unfollow(): Promise<void>;
}
