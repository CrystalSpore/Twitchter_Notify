import Twitch from '../../../';
import HelixPagination from '../HelixPagination';
import { UserIdResolvable } from '../../../Toolkit/UserTools';
import HelixUser from './HelixUser';
export interface HelixFollowFilter extends HelixPagination {
    user?: UserIdResolvable;
    followedUser?: UserIdResolvable;
}
export interface HelixFollowData {
    from_id: string;
    to_id: string;
    followed_at: string;
}
export default class HelixFollow {
    protected _data: HelixFollowData;
    protected _client: Twitch;
    constructor(_data: HelixFollowData, client: Twitch);
    readonly followedAt: Date;
    readonly userId: string;
    getUser(): Promise<HelixUser>;
    readonly followedUserId: string;
    getFollowedUser(): Promise<HelixUser>;
}
