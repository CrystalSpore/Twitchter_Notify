import Twitch from '../../';
import HelixUser, { HelixUserType } from '../../API/Helix/User/HelixUser';
import { PubSubChatMessageBadge, PubSubChatMessageEmote } from './PubSubMessage';
export interface PubSubWhisperTags {
    login: string;
    display_name: string;
    color: string;
    user_type: HelixUserType;
    emotes: PubSubChatMessageEmote[];
    badges: PubSubChatMessageBadge[];
}
export interface PubSubWhisperRecipient {
    id: number;
    username: string;
    display_name: string;
    color: string;
    user_type: HelixUserType;
    badges: PubSubChatMessageBadge[];
    profile_image: string | null;
}
export interface PubSubWhisperMessageContent {
    id: number;
    message_id: string;
    thread_id: string;
    body: string;
    sent_ts: number;
    from_id: number;
    tags: PubSubWhisperTags;
    recipient: PubSubWhisperRecipient;
}
export interface PubSubWhisperMessageData {
    type: 'whisper_received';
    data: string;
    data_object: PubSubWhisperMessageContent;
}
export default class PubSubWhisperMessage {
    private readonly _data;
    private readonly _twitchClient;
    constructor(_data: PubSubWhisperMessageData, twitchClient: Twitch);
    readonly text: string;
    readonly senderId: string;
    readonly senderName: string;
    readonly senderDisplayName: string;
    getSender(): Promise<HelixUser>;
}
