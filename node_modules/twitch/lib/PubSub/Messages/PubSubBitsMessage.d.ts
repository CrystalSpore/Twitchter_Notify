import { PubSubBasicMessageInfo } from './PubSubMessage';
import Twitch from '../../index';
import HelixUser from '../../API/Helix/User/HelixUser';
export interface PubSubBitsMessageBitsEntitlement {
    previous_version: number;
    new_version: number;
}
export interface PubSubBitsMessageContent extends PubSubBasicMessageInfo {
    chat_message: string;
    bits_used: number;
    total_bits_used: number;
    context: 'cheer';
    badge_entitlement: PubSubBitsMessageBitsEntitlement | null;
}
export interface PubSubBitsMessageData {
    data: PubSubBitsMessageContent;
    version: string;
    message_type: string;
    message_id: string;
}
export default class PubSubBitsMessage {
    private readonly _data;
    private readonly _twitchClient;
    constructor(_data: PubSubBitsMessageData, twitchClient: Twitch);
    readonly userId: string;
    readonly userName: string;
    getUser(): Promise<HelixUser>;
    readonly message: string;
    readonly bits: number;
    readonly totalBits: number;
}
